import tkinter as tk
from tkinter import messagebox, ttk
import sqlite3
from datetime import datetime

# ---------- Database Setup ----------
conn = sqlite3.connect("bill_splitter.db")
cursor = conn.cursor()

cursor.execute('''
    CREATE TABLE IF NOT EXISTS transactions (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        group_name TEXT,
        members TEXT,
        total_amount REAL,
        per_person REAL,
        date_time TEXT
    )
''')
conn.commit()

# ---------- Functions ----------
def split_bill():
    group = group_name_entry.get().strip()
    members = members_entry.get().strip()
    total = total_amount_entry.get().strip()

    if not group or not members or not total:
        messagebox.showerror("Input Error", "Please fill all fields.")
        return

    try:
        total_amount = float(total)
        member_list = [m.strip() for m in members.split(",") if m.strip()]
        if len(member_list) == 0:
            raise ValueError

        per_person = round(total_amount / len(member_list), 2)
        now = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

        cursor.execute('''
            INSERT INTO transactions (group_name, members, total_amount, per_person, date_time)
            VALUES (?, ?, ?, ?, ?)
        ''', (group, ", ".join(member_list), total_amount, per_person, now))
        conn.commit()

        messagebox.showinfo("Success", f"Each person should pay â‚¹{per_person}")
        view_history()

    except ValueError:
        messagebox.showerror("Invalid Input", "Enter a valid number for total amount and proper member names.")

def view_history():
    for row in history_table.get_children():
        history_table.delete(row)

    cursor.execute("SELECT * FROM transactions ORDER BY id DESC")
    records = cursor.fetchall()

    for row in records:
        history_table.insert("", "end", values=(row[1], row[2], row[3], row[4], row[5]))

def clear_inputs():
    group_name_entry.delete(0, tk.END)
    members_entry.delete(0, tk.END)
    total_amount_entry.delete(0, tk.END)

# ---------- GUI Setup ----------
root = tk.Tk()
root.title("Bill Splitter with Group History")
root.geometry("800x500")
root.config(bg="#F5F5F5")

# Title
tk.Label(root, text="ðŸ’¸ Bill Splitter", font=("Helvetica", 20, "bold"), bg="#F5F5F5").pack(pady=10)

frame = tk.Frame(root, bg="#F5F5F5")
frame.pack(pady=10)

# Input Fields
tk.Label(frame, text="Group Name:", font=("Arial", 12), bg="#F5F5F5").grid(row=0, column=0, sticky="e", padx=5, pady=5)
group_name_entry = tk.Entry(frame, width=30)
group_name_entry.grid(row=0, column=1, padx=5)

tk.Label(frame, text="Members (comma separated):", font=("Arial", 12), bg="#F5F5F5").grid(row=1, column=0, sticky="e", padx=5, pady=5)
members_entry = tk.Entry(frame, width=30)
members_entry.grid(row=1, column=1, padx=5)

tk.Label(frame, text="Total Amount (â‚¹):", font=("Arial", 12), bg="#F5F5F5").grid(row=2, column=0, sticky="e", padx=5, pady=5)
total_amount_entry = tk.Entry(frame, width=30)
total_amount_entry.grid(row=2, column=1, padx=5)

# Buttons Frame
button_frame = tk.Frame(frame, bg="#F5F5F5")
button_frame.grid(row=3, column=0, columnspan=2, pady=10)

tk.Button(button_frame, text="Split Bill", command=split_bill, bg="#4CAF50", fg="white", width=15).pack(side="left", padx=10)
tk.Button(button_frame, text="Clear", command=clear_inputs, bg="#f44336", fg="white", width=15).pack(side="left", padx=10)

# History Section
tk.Label(root, text="ðŸ“œ Group History", font=("Helvetica", 14, "bold"), bg="#F5F5F5").pack()

columns = ("Group", "Members", "Total", "Per Person", "Date & Time")
history_table = ttk.Treeview(root, columns=columns, show="headings")
for col in columns:
    history_table.heading(col, text=col)
    history_table.column(col, width=150 if col != "Members" else 200)

history_table.pack(fill="both", expand=True, padx=20, pady=10)

# Load existing history
view_history()

root.mainloop()
